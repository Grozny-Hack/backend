"""empty message

Revision ID: 5dc619839dfc
Revises: 88e527bdc3f3
Create Date: 2023-05-26 22:14:45.703876

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5dc619839dfc'
down_revision = '88e527bdc3f3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('business_card')
    # op.drop_table('template_type')
    # op.drop_table('business_card_owner')
    op.add_column('users', sa.Column('address', sa.TEXT(), nullable=True))
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=16), nullable=True))
    op.add_column('users', sa.Column('ip_or_ur_face', sa.INTEGER(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'ip_or_ur_face')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'address')
    # op.create_table('business_card_owner',
    # sa.Column('owner', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('card', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    # sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['card'], ['business_card.id'], name='business_card_owner_card_fkey', ondelete='CASCADE'),
    # sa.ForeignKeyConstraint(['owner'], ['users.id'], name='business_card_owner_owner_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='business_card_owner_pkey')
    # )
    # op.create_table('template_type',
    # sa.Column('title', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.Column('picture_url', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='template_type_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('business_card',
    # sa.Column('job_title', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.Column('specificity', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.Column('phone', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    # sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    # sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.Column('tg_url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('vk_url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('fb_url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('own_site_url', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    # sa.Column('cv_url', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    # sa.Column('company_logo', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('bio', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    # sa.Column('bc_template_type', sa.UUID(), autoincrement=False, nullable=True),
    # sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    # sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['bc_template_type'], ['template_type.id'], name='business_card_bc_template_type_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('id', name='business_card_pkey')
    # )
    # # ### end Alembic commands ###
